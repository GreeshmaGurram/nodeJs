const express = require("express");
const { open } = require("sqlite");
const sqlite3 = require("sqlite3");
const path = require("path");

const app = express();
app.use(express.json());

let db = null;
let dbPath = path.join(__dirname, "covid19India.db");

const initializeDb = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    });
  } catch (e) {
    console.log(`DB error : ${e.message}`);
    process.exit(1);
  }
};

initializeDb();

const convertStateTableColumnNamesToCamelCase = (obj) => {
  return {
    stateId: obj.state_id,
    stateName: obj.state_name,
    population: obj.population,
  };
};

const convertDistrictTableColumnNamesToCamelCase = (obj) => {
  return {
    districtId: obj.district_id,
    districtName: obj.district_name,
    stateId: obj.state_id,
    cases: obj.cases,
    cured: obj.cured,
    active: obj.active,
    deaths: obj.deaths,
  };
};

const convertStateNameToCamelCase = (obj) => {
  return {
    stateName: obj.state_name,
  };
};

// Get states API
app.get("/states/", async (request, response) => {
  const getStatesQuery = `
    SELECT * 
    FROM state
    ;`;
  const statesArray = await db.all(getStatesQuery);
  response.send(
    statesArray.map((state) => convertStateTableColumnNamesToCamelCase(state))
  );
});

// Get state API
app.get("/states/:stateId", async (request, response) => {
  const { stateId } = request.params;
  const getStateQuery = `
    SELECT * 
    FROM state
    WHERE state_id=${stateId}
    ;`;
  const stateArray = await db.get(getStateQuery);
  response.send(convertStateTableColumnNamesToCamelCase(stateArray));
});

// Post district API
app.post("/districts/", async (request, response) => {
  const { districtName, stateId, cases, cured, active, deaths } = request.body;
  const addDistrictQuery = `
    INSERT INTO district (district_name, state_id, cases, cured, active, deaths)
    values ('${districtName}', ${stateId}, ${cases}, ${cured}, ${active}, ${deaths})
    ;`;
  await db.run(addDistrictQuery);
  response.send("District Successfully Added");
});

// Get district API
app.get("/districts/:districtId", async (request, response) => {
  const { districtId } = request.params;
  const getDistrictQuery = `
    SELECT * 
    FROM district
    WHERE district_id=${districtId}
    ;`;
  const districtArray = await db.get(getDistrictQuery);
  response.send(convertDistrictTableColumnNamesToCamelCase(districtArray));
});

// Delete district API
app.delete("/districts/:districtId", async (request, response) => {
  const { districtId } = request.params;
  const deleteDistrictQuery = `
    DELETE 
    FROM district
    WHERE district_id=${districtId}
    ;`;
  await db.run(deleteDistrictQuery);
  response.send("District Removed");
});

// Update district API
app.put("/districts/:districtId", async (request, response) => {
  const { districtId } = request.params;
  const { districtName, stateId, cases, cured, active, deaths } = request.body;
  const updateDistrictQuery = `
    UPDATE district
    SET district_name='${districtName}', state_id=${stateId},
    cases=${cases}, cured=${cured}, active=${active},
    deaths=${deaths}
    WHERE district_id=${districtId}
    ;`;
  await db.run(updateDistrictQuery);
  response.send("District Details Updated");
});

// Stats of state API
app.get("/states/:stateId/stats/", async (request, response) => {
  const { stateId } = request.params;
  const getStateStatsQuery = `
    SELECT SUM(cases) as totalCases, 
    SUM(cured) as totalCured,
    SUM(active) as totalActive,
    SUM(deaths) as totalDeaths
    FROM district WHERE state_id = ${stateId}
    `;
  const stats = await db.get(getStateStatsQuery);
  response.send(stats);
});

// Get state name from districtId API
app.get("/districts/:districtId/details/", async (request, response) => {
  const { districtId } = request.params;
  const getStateQuery = `
    SELECT state_name
    FROM state JOIN district ON
    state.state_id = district.state_id
    WHERE district_id=${districtId}
    ;`;
  const stateArray = await db.get(getStateQuery);
  response.send(convertStateNameToCamelCase(stateArray));
});

module.exports = app;
